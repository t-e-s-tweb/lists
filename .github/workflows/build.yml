name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.0
      with:
       repository: '0xERR0R/blocky'
       ref: 'main'
      
    - name: Set up Go
      uses: actions/setup-go@v4.1.0
      with:
        go-version: '1.21.5'
        cache: false
    - uses: actions/cache@v3
      with:
       path: |
        ~/.cache/go-build
        ~/go/pkg/mod
       key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
       restore-keys: |
        ${{ runner.os }}-go-    
    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v2.1.1
    - name: Install dependencies
      run: |
          go get -u go.uber.org/automaxprocs
          go get github.com/KimMachineGun/automemlimit@latest 
    - name: Add imports to main.go
      run: |
        sed -i '/^import/ { N; N; N; s/\(.*\)/&\n\t"github.com\/KimMachineGun\/automemlimit\/memlimit"\n\t_ "go.uber.org\/automaxprocs"/; }' main.go
        sed -i '/import (/ {
          :a; N; /\n)/!ba;
          s/)\(.*\)/)\1\
          \
          func init() {\
            memlimit.SetGoMemLimitWithEnv();\
          }/
        }' main.go
    - name: build for arm64
      run: env CGO_ENABLED="0" GOOS=linux GOARCH=arm64 CC="zig cc -target aarch64-linux-musl" CXX="zig c++ -target aarch64-linux-musl" go build -o blockyarm64 -trimpath -ldflags "-s -w -buildid=" ./
    - name: build for amd64
      run: env CGO_ENABLED="0" GOOS=linux GOARCH=amd64 CC="zig cc -target x86_64-linux-musl" CXX="zig c++ -target x86_64-linux-musl" go build -o blocky -trimpath -ldflags "-s -w -buildid=" ./
    - name: build for freebsd
      run: env CGO_ENABLED="0" GOOS=freebsd GOARCH=amd64 CC="zig cc -target aarch64-linux-musl" CXX="zig c++ -target aarch64-linux-musl" go build -o blockyfreebsd -trimpath -ldflags "-s -w -buildid=" ./
 
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./blocky*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
